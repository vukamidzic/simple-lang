package org.simplelang;

// Generated from src/main/java/org/simplelang/SimpleLang.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class SimpleLangLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, WHILE=2, FOR=3, PTR=4, TRUE=5, FALSE=6, TYPE=7, EQ=8, DSEMIC=9, 
		PLUS=10, MINUS=11, MUL=12, DIV=13, LARROW=14, LESS=15, GREAT=16, CMP_EQ=17, 
		CMP_NEQ=18, AND=19, OR=20, NOT=21, LPAR=22, RPAR=23, LCURL=24, RCURL=25, 
		QMARK=26, COMMA=27, WS=28, NL=29, INT=30, FLOAT=31, ID=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "WHILE", "FOR", "PTR", "TRUE", "FALSE", "TYPE", "EQ", "DSEMIC", 
			"PLUS", "MINUS", "MUL", "DIV", "LARROW", "LESS", "GREAT", "CMP_EQ", "CMP_NEQ", 
			"AND", "OR", "NOT", "LPAR", "RPAR", "LCURL", "RCURL", "QMARK", "COMMA", 
			"WS", "NL", "INT", "FLOAT", "ID"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'proc'", "'while'", "'for'", "'ptr'", "'true'", "'false'", null, 
			"':='", "'::'", "'+'", "'-'", "'*'", "'/'", "'<-'", "'<'", "'>'", "'='", 
			"'/='", "'and'", "'or'", "'not'", "'('", "')'", "'{'", "'}'", "'?'", 
			"','"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "WHILE", "FOR", "PTR", "TRUE", "FALSE", "TYPE", "EQ", "DSEMIC", 
			"PLUS", "MINUS", "MUL", "DIV", "LARROW", "LESS", "GREAT", "CMP_EQ", "CMP_NEQ", 
			"AND", "OR", "NOT", "LPAR", "RPAR", "LCURL", "RCURL", "QMARK", "COMMA", 
			"WS", "NL", "INT", "FLOAT", "ID"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SimpleLangLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SimpleLang.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000 \u00c1\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000\u0001"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001"+
		"\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001"+
		"\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006l\b\u0006\u0001"+
		"\u0007\u0001\u0007\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t"+
		"\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001"+
		"\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010"+
		"\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012"+
		"\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016"+
		"\u0001\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019"+
		"\u0001\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0003\u001b\u00a0\b\u001b"+
		"\u0001\u001b\u0001\u001b\u0001\u001c\u0001\u001c\u0001\u001c\u0003\u001c"+
		"\u00a7\b\u001c\u0001\u001c\u0001\u001c\u0001\u001d\u0003\u001d\u00ac\b"+
		"\u001d\u0001\u001d\u0004\u001d\u00af\b\u001d\u000b\u001d\f\u001d\u00b0"+
		"\u0001\u001e\u0003\u001e\u00b4\b\u001e\u0001\u001e\u0001\u001e\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0003\u001f\u00bb\b\u001f\u0001\u001f\u0004\u001f"+
		"\u00be\b\u001f\u000b\u001f\f\u001f\u00bf\u0000\u0000 \u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a"+
		"5\u001b7\u001c9\u001d;\u001e=\u001f? \u0001\u0000\u0003\u0003\u0000\t"+
		"\t\r\r  \u0001\u000009\u0002\u0000AZaz\u00c8\u0000\u0001\u0001\u0000\u0000"+
		"\u0000\u0000\u0003\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0001A\u0001\u0000\u0000\u0000\u0003F\u0001\u0000"+
		"\u0000\u0000\u0005L\u0001\u0000\u0000\u0000\u0007P\u0001\u0000\u0000\u0000"+
		"\tT\u0001\u0000\u0000\u0000\u000bY\u0001\u0000\u0000\u0000\rk\u0001\u0000"+
		"\u0000\u0000\u000fm\u0001\u0000\u0000\u0000\u0011p\u0001\u0000\u0000\u0000"+
		"\u0013s\u0001\u0000\u0000\u0000\u0015u\u0001\u0000\u0000\u0000\u0017w"+
		"\u0001\u0000\u0000\u0000\u0019y\u0001\u0000\u0000\u0000\u001b{\u0001\u0000"+
		"\u0000\u0000\u001d~\u0001\u0000\u0000\u0000\u001f\u0080\u0001\u0000\u0000"+
		"\u0000!\u0082\u0001\u0000\u0000\u0000#\u0084\u0001\u0000\u0000\u0000%"+
		"\u0087\u0001\u0000\u0000\u0000\'\u008b\u0001\u0000\u0000\u0000)\u008e"+
		"\u0001\u0000\u0000\u0000+\u0092\u0001\u0000\u0000\u0000-\u0094\u0001\u0000"+
		"\u0000\u0000/\u0096\u0001\u0000\u0000\u00001\u0098\u0001\u0000\u0000\u0000"+
		"3\u009a\u0001\u0000\u0000\u00005\u009c\u0001\u0000\u0000\u00007\u009f"+
		"\u0001\u0000\u0000\u00009\u00a6\u0001\u0000\u0000\u0000;\u00ab\u0001\u0000"+
		"\u0000\u0000=\u00b3\u0001\u0000\u0000\u0000?\u00ba\u0001\u0000\u0000\u0000"+
		"AB\u0005p\u0000\u0000BC\u0005r\u0000\u0000CD\u0005o\u0000\u0000DE\u0005"+
		"c\u0000\u0000E\u0002\u0001\u0000\u0000\u0000FG\u0005w\u0000\u0000GH\u0005"+
		"h\u0000\u0000HI\u0005i\u0000\u0000IJ\u0005l\u0000\u0000JK\u0005e\u0000"+
		"\u0000K\u0004\u0001\u0000\u0000\u0000LM\u0005f\u0000\u0000MN\u0005o\u0000"+
		"\u0000NO\u0005r\u0000\u0000O\u0006\u0001\u0000\u0000\u0000PQ\u0005p\u0000"+
		"\u0000QR\u0005t\u0000\u0000RS\u0005r\u0000\u0000S\b\u0001\u0000\u0000"+
		"\u0000TU\u0005t\u0000\u0000UV\u0005r\u0000\u0000VW\u0005u\u0000\u0000"+
		"WX\u0005e\u0000\u0000X\n\u0001\u0000\u0000\u0000YZ\u0005f\u0000\u0000"+
		"Z[\u0005a\u0000\u0000[\\\u0005l\u0000\u0000\\]\u0005s\u0000\u0000]^\u0005"+
		"e\u0000\u0000^\f\u0001\u0000\u0000\u0000_`\u0005i\u0000\u0000`a\u0005"+
		"n\u0000\u0000al\u0005t\u0000\u0000bc\u0005f\u0000\u0000cd\u0005l\u0000"+
		"\u0000de\u0005o\u0000\u0000ef\u0005a\u0000\u0000fl\u0005t\u0000\u0000"+
		"gh\u0005b\u0000\u0000hi\u0005o\u0000\u0000ij\u0005o\u0000\u0000jl\u0005"+
		"l\u0000\u0000k_\u0001\u0000\u0000\u0000kb\u0001\u0000\u0000\u0000kg\u0001"+
		"\u0000\u0000\u0000l\u000e\u0001\u0000\u0000\u0000mn\u0005:\u0000\u0000"+
		"no\u0005=\u0000\u0000o\u0010\u0001\u0000\u0000\u0000pq\u0005:\u0000\u0000"+
		"qr\u0005:\u0000\u0000r\u0012\u0001\u0000\u0000\u0000st\u0005+\u0000\u0000"+
		"t\u0014\u0001\u0000\u0000\u0000uv\u0005-\u0000\u0000v\u0016\u0001\u0000"+
		"\u0000\u0000wx\u0005*\u0000\u0000x\u0018\u0001\u0000\u0000\u0000yz\u0005"+
		"/\u0000\u0000z\u001a\u0001\u0000\u0000\u0000{|\u0005<\u0000\u0000|}\u0005"+
		"-\u0000\u0000}\u001c\u0001\u0000\u0000\u0000~\u007f\u0005<\u0000\u0000"+
		"\u007f\u001e\u0001\u0000\u0000\u0000\u0080\u0081\u0005>\u0000\u0000\u0081"+
		" \u0001\u0000\u0000\u0000\u0082\u0083\u0005=\u0000\u0000\u0083\"\u0001"+
		"\u0000\u0000\u0000\u0084\u0085\u0005/\u0000\u0000\u0085\u0086\u0005=\u0000"+
		"\u0000\u0086$\u0001\u0000\u0000\u0000\u0087\u0088\u0005a\u0000\u0000\u0088"+
		"\u0089\u0005n\u0000\u0000\u0089\u008a\u0005d\u0000\u0000\u008a&\u0001"+
		"\u0000\u0000\u0000\u008b\u008c\u0005o\u0000\u0000\u008c\u008d\u0005r\u0000"+
		"\u0000\u008d(\u0001\u0000\u0000\u0000\u008e\u008f\u0005n\u0000\u0000\u008f"+
		"\u0090\u0005o\u0000\u0000\u0090\u0091\u0005t\u0000\u0000\u0091*\u0001"+
		"\u0000\u0000\u0000\u0092\u0093\u0005(\u0000\u0000\u0093,\u0001\u0000\u0000"+
		"\u0000\u0094\u0095\u0005)\u0000\u0000\u0095.\u0001\u0000\u0000\u0000\u0096"+
		"\u0097\u0005{\u0000\u0000\u00970\u0001\u0000\u0000\u0000\u0098\u0099\u0005"+
		"}\u0000\u0000\u00992\u0001\u0000\u0000\u0000\u009a\u009b\u0005?\u0000"+
		"\u0000\u009b4\u0001\u0000\u0000\u0000\u009c\u009d\u0005,\u0000\u0000\u009d"+
		"6\u0001\u0000\u0000\u0000\u009e\u00a0\u0007\u0000\u0000\u0000\u009f\u009e"+
		"\u0001\u0000\u0000\u0000\u00a0\u00a1\u0001\u0000\u0000\u0000\u00a1\u00a2"+
		"\u0006\u001b\u0000\u0000\u00a28\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005"+
		"\r\u0000\u0000\u00a4\u00a7\u0005\n\u0000\u0000\u00a5\u00a7\u0005\n\u0000"+
		"\u0000\u00a6\u00a3\u0001\u0000\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a9\u0006\u001c\u0000"+
		"\u0000\u00a9:\u0001\u0000\u0000\u0000\u00aa\u00ac\u0005-\u0000\u0000\u00ab"+
		"\u00aa\u0001\u0000\u0000\u0000\u00ab\u00ac\u0001\u0000\u0000\u0000\u00ac"+
		"\u00ae\u0001\u0000\u0000\u0000\u00ad\u00af\u0007\u0001\u0000\u0000\u00ae"+
		"\u00ad\u0001\u0000\u0000\u0000\u00af\u00b0\u0001\u0000\u0000\u0000\u00b0"+
		"\u00ae\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000\u0000\u00b1"+
		"<\u0001\u0000\u0000\u0000\u00b2\u00b4\u0005-\u0000\u0000\u00b3\u00b2\u0001"+
		"\u0000\u0000\u0000\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001"+
		"\u0000\u0000\u0000\u00b5\u00b6\u0003;\u001d\u0000\u00b6\u00b7\u0005.\u0000"+
		"\u0000\u00b7\u00b8\u0003;\u001d\u0000\u00b8>\u0001\u0000\u0000\u0000\u00b9"+
		"\u00bb\u0005_\u0000\u0000\u00ba\u00b9\u0001\u0000\u0000\u0000\u00ba\u00bb"+
		"\u0001\u0000\u0000\u0000\u00bb\u00bd\u0001\u0000\u0000\u0000\u00bc\u00be"+
		"\u0007\u0002\u0000\u0000\u00bd\u00bc\u0001\u0000\u0000\u0000\u00be\u00bf"+
		"\u0001\u0000\u0000\u0000\u00bf\u00bd\u0001\u0000\u0000\u0000\u00bf\u00c0"+
		"\u0001\u0000\u0000\u0000\u00c0@\u0001\u0000\u0000\u0000\t\u0000k\u009f"+
		"\u00a6\u00ab\u00b0\u00b3\u00ba\u00bf\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}